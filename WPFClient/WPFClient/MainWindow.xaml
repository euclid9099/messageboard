<Window x:Class="WPFClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFClient"
        mc:Ignorable="d"
        Title="Kornelja"
        Height="600" Width="800"
        Icon="/Kornelja.png">
    <Window.Resources>
        <local:LikedToColorConverter x:Key="LikedToColorConverter" />
        <local:DislikedToColorConverter x:Key="DislikedToColorConverter" />
        <local:WidthReducer x:Key="WidthReducer" />
    </Window.Resources>

    <Grid>
        <TabControl>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="accountDisplay" Width="10" Height="10" Fill="Gray"/>
                        <TextBlock Margin="5,0" x:Name="accountTab">Account (anonymus)</TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <Grid VerticalAlignment="Center">
                    <StackPanel x:Name="loginView" Visibility="Visible" HorizontalAlignment="Center">
                        <TextBlock Margin="0,15,0,5" FontSize="25" TextAlignment="Center">Username</TextBlock>
                        <TextBox FontSize="25" x:Name="usernameTextbox" Width="250"/>
                        <TextBlock Margin="0,15,0,5" FontSize="25" TextAlignment="Center">Password</TextBlock>
                        <PasswordBox FontSize="25" x:Name="passwordTextbox" Width="250"/>
                        <Button Click="Login" Margin="0,15,0,0" FontSize="25" Width="100">Login</Button>
                        <TextBlock>(you can also remain anonymous - most functions will still work)</TextBlock>
                    </StackPanel>
                    <StackPanel x:Name="accountView" HorizontalAlignment="Center" Visibility="Hidden">
                        <TextBlock Margin="0,15,0,5" FontSize="20" TextAlignment="Center">Use account</TextBlock>
                        <CheckBox x:Name="useAccountCheckbox" Checked="ActivateAccount" Unchecked="DeactivateAccount" IsChecked="False" HorizontalAlignment="Center"></CheckBox>
                        <TextBlock>Toggle off to post anonymously, without logging out</TextBlock>
                        <Button Click="Logout" Margin="0,20,0,0" FontSize="25" Width="100">Logout</Button>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Messages">
                <Grid Margin="15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="300" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>


                    <ListBox HorizontalContentAlignment="Stretch" Grid.Row="0" x:Name="postsListbox" ScrollViewer.CanContentScroll="False">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Black" BorderThickness="1">
                                    <StackPanel Margin="10" Width="{Binding ElementName=postsListbox, Path=ActualWidth, Converter={StaticResource WidthReducer}}">
                                        <Canvas>
                                            <TextBlock Text="{Binding AuthorName}" />
                                            <TextBlock FontStyle="Italic" Canvas.Right="0" Text="{Binding DisplayDate}" />
                                        </Canvas>
                                        <TextBlock TextWrapping="Wrap" Margin="10,30,10,0" Text="{Binding Message}" />
                                        <TextBlock FontSize="10" Margin="10,0,10,30" Text="{Binding DisplayEdited}" />
                                        <DockPanel HorizontalAlignment="Stretch">
                                            <Button DockPanel.Dock="Left" Click="LikePost" Background="{Binding Liked, Converter={StaticResource LikedToColorConverter}}" Content="{Binding DisplayLikes}" />
                                            <Button DockPanel.Dock="Right" Click="DislikePost" Background="{Binding Disliked, Converter={StaticResource DislikedToColorConverter}}" Content="{Binding DisplayDislikes}" Canvas.Right="0" />
                                            <Button Width="70" Click="ReloadPost" Content="reload"/>
                                        </DockPanel>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="true">
                                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="true"/>
                                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <StackPanel Margin="10" Grid.Row="0" Grid.Column="1">
                        <TextBlock FontSize="20" HorizontalAlignment="Center">Share your thoughts</TextBlock>
                        <TextBox Height="150" Margin="10" TextWrapping="Wrap" x:Name="newPostContent"></TextBox>
                        <Button Width="70" Click="CreateNewPost" Content="Send" />
                    </StackPanel>
                    <Button Grid.Row="1" Click="LoadMorePostsButton">load (further)</Button>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
